x<-list(foo=1:4, bar=0.6)
x
x[1]
x[1][1]
x[1][2]
x[[1]]
x[1][1][1]
x[2]
x[2][1]
x[2][1][1]
x[2][2]
x[[2]]
x[[[1]]]
x$bar
x$foo
x[["bar"]]
x["bar"]
x <- matrix(1:6,2,3)
x
x[1,2,drop=F]
x[1,2]
x[1,]
x[1,,drop=F]
x<-list(aardvark=1:5)
x
x$a
x<-list(aard=1:5,aad=1:5)
x
x$a
x$aad
x$aa
x$aar
x[["a"]]
x[["aar"]]
x[["aard"]]
x[["aa", exact=F]]
x[["aar", exact=F]]
x<-c(1,2,NA,4,NA,5)
x
bad<-is.na(x)
bad
vad
vad
bad
x[!bad]
y<-c("c","b",NA,"d",NA,"c")
good<-complete.cases(x,y)
good
x
x<-1:4
x
xx<-c(1:4)
xx
y<-6:9
x+y
x/y
x>1
x>=1
y==8
x<-matrix(1:4,2,2)
y<-matrix(rep(10,4),2,2)
x*y
x/y
x%*%y
xy
x
y
library("swirl")
swirl
swirl()
5+7
x<-5+7
X
x
y<-x-3
y
c(1.1,9.3.14)
z<-c(1.1,9,3,14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args()
args(list.files
)
old.dir<-getwd()
dir.create(testdir)
args(dir.create)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename())
args(file.rename
)
file.rename("mytest.R","mytest2.R")
file.copy("mytest.2","muytest3.R")
file.copy("mytest.2","mytest3.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("mytest3.R"),"testdir2","testdir3",recursive=T)
dir.create(file.path("mytest3.R"),recursive=T)
dir.create(file.path('testdir2','testdir3'),recursive=T)
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
info()
args(unlink)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=FRUE)
unlink("testdir",recursive=TRUE)
bye()
x<-4
class(x)
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x[x %in% 1:5] <- 0
x
read.csv("hw1_data.csv")
hw<-read.csv("hw1_data.csv")
head(hw)
ncol(hw)
nrow(hw)
tail(hw)
hw$Ozone[47]
hw_1<-na.omit(hw$Ozone)
hw
hw_!
hw_1
length(hw_1)
153-116
mean(hw_1)
subboolean<-hw[hw[,"Ozone"]>31&hw[,"Temp"]>90]
subboolean<-hw[hw[,"Ozone"]>31&hw[,"Temp"]>90,]
subboolean
mean(subboolean$Solar.R,na.rm=T)
sub<-hw[hw[,"Month"]==6,]
sub
mean(sub$Temp,na.rm=T)
sub<-hw[hw[,"Month"]==5,]
max(sub$Ozone)
args(max)
max(sub$Ozone,na.rm=T)
library("swirl")
swirl
swirl()
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(1,10,by=0.5)
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Buzz")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
quit()
librayr("swirl")
library("swirl")
swirl()
x<-c(44,NA,5.NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
x<-rep(NA,1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-iNF
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vec2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
quit()
library("swirl")
quit()
library("swirl")
swirl()
my_vector<-1:2
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
quit()
library("swirl")
ls
ls()
rm(list=ls())
library("swirl")
swirl()
?matrix
my_matrix2<-matrix(c(1:20),nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c([[Bill]],[[Gina]],[[Kelly]],[[Sean]])
patients<-c("Bill","Gina","Kelly","Sean")
cbind(my_matrix,patients)
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matirx)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-vector("patients","age","weight","bp","rating","test")
cnames<-vector(c("patients","age","weight","bp","rating","test"))
cnames<-vector("patients","age","weight","bp","rating","test")
cnames<-vector("patients","age","weight","bp","rating","test")
cnames<-vector("patients","age","weight","bp","rating","test")
cnames<-c("patients","age","weight","bp","rating","test")
?vector
cnames<-vector("patient","age","weight","bp","rating","test")
cnames<-vector(c("patient","age","weight","bp","rating","test"))
cnames<-vector(mode="character",c("patient","age","weight","bp","rating","test"))
cnames<-vector(mode="character",length=6)
cnames<-c("patient","age","weight","bp","rating","test")
?dim
colnames(my_data)<-cnames
my_data
T==T
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE&FALSE
TRUE & c(TRUE,FLASE,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE&& c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
whicn(ints>7)
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
submit()
boring_function('My first function!')
boring_function
submit
submit()
my_mean(c(4,5,10))
submit()
remainder(9)
remainder(100)
remainder(8,3)
remainder(9,2)
remainder(38,6)
remainder(1111,3)
remainder(111,222)
remainder(77,89)
remainder(8,3)
submit()
submit()
submit()
remainder(8,3)
remainder(100,7)
remainder(17,6)
submit()
remainder(17)
?isNaN
?isNa
?isNumber
submit()
remainder(9)
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit
submit()
evaluate(sd(),c(1.4,3.6,7.9,8.8))
evaluate(sd(),data.frame(c(1.4,3.6,7.9,8.8)))
evaluate(sd(),vector(c(1.4,3.6,7.9,8.8)))
evaluate(sd(),as.vector(c(1.4,3.6,7.9,8.8)))
evaluate(sd(),as.vector(data.frame(c(1.4,3.6,7.9,8.8))))
sd(c(1.4,3.6,7.9,8.8))
info()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("I hava an interview tomorrow.")
bye()
qiut()
quit()
source("pollutantmean.R")
submit()
pollutantmean("/Users/Makone_Xia/Documents/Coursera/r_default/specdata","sulfate",1:332)
source("submitscript1.R")
submit()
submit()
submit()
submit()
complete("/Users/Makone_Xia/Documents/Coursera/r_default/specdata",1:332)
source("complete.R")
complete("/Users/Makone_Xia/Documents/Coursera/r_default/specdata",1:332)
submit()
submit()
submit()
source("corr.R")
corr("/Users/Makone_Xia/Documents/Coursera/r_default/specdata")
corr("/Users/Makone_Xia/Documents/Coursera/r_default/specdata",threshold=1)
submit()
submit()
submit()
quit()
library("swirl")
swirl
swirl()
library("swirl")
swirl()
library(dataset)
library(datasets)
data(iris)
?iris
mean(iris$Sepal.Length)
iris?Sepal.Length
iris$Sepal.Length
iris$virginica
iris3
mean(iris["Virginica"]$Sepal.Length)
mean(iris["Virginica"]$Sepal.L)
iris[3]
iris[1]
mean(iris3["Virginica"]$Sepal.Length)
mean(iris3["Virginica"][1])
mean(iris3["Virginica"])
mean(iris3[Virginica])
?"%in%"
?"%*%"
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
graphic
set.seed(10)
x<-rbinom(10,10,0.5)
y<-rnorm(10,0,20)
y<-0.5+2*x+e
y
install.packages('ggplot2')
s= seq(1,0,by=0.2)
s= seq(0,1,by=0.2)
s
packeg
packge
man
help
load("~/RStuffs/Start.RData")
ggplot
install.packages("ggplot2", "reshape2", "plyr", "languageR","lme4", "psych")
install.packages("ggplot2", "reshape2", "plyr", "languageR","lme4", "psych")
install.package("ggplot2")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/Library/R/3.1/library")
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "httr", "jsonlite", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "mime", "nlme", "nnet", "R6", "Rcpp", "RCurl", "rpart", "spatial", "stringr", "survival", "testthat"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
x=1:9
dim(x)
dim(x)<-c(3,3)
x
mode(x)
class(x)
x=(1,2,4,29)
x=c(1,2,4,29)
x
mode(x)
class(s)
class(x)
newVector=c(1,2,4,29)
newVector
newVector[2]
newVector[0]
newDic=c("1.29","2.5","priceless")
newDic
names(newDic)=c("Banana","Apple","kettens")
newDic
newDic["Apple"]
x
x+c(1,2,3)
x
x+c(1,2)
View(my_matrix)
View(my_matrix)
View(my_vector)
View(my_matrix)
library(RSQLite)
install.packages("RSQLite")
library(RSQLite)
setwd("~/Document/Courses/workspace/DALab2/Data_Analytics")
setwd("~/Documents/Courses/workspace/DALab2/Data_Analytics")
db=dbConnect(SQLite(),dbname="pittsburghData.db")
dbListFields(db,"employment")
dbListFields(db,"popANDdensity")
query<-dbSendQuery(db,"SELECT * FROM popANDdensity WHERE pop1940 < 2000")
pop1940<-dbFetch(query, n=-1)
class(pop1940)
pop1940
mean(pop1940$pop1940)
median(pop1940$pop1940)
sd(pop1940$pop1940)
quantile(pop1940$pop1940)
